version: '3.8'

services:
  # MongoDB сервис (локальная база данных)
  mongodb:
    image: mongo:8.0
    container_name: lex-mongodb
    restart: unless-stopped
    command: mongod --dbpath /data/db --port 27017 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      # Используем локальную папку dataBase
      - ./dataBase:/data/db
      - ./dataBase:/data/configdb
    networks:
      - lex-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Основное приложение
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: lex-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGO_URL: mongodb://mongodb:27017/lex-ai
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      # WebSocket настройки
      WS_MAX_CONNECTIONS: ${WS_MAX_CONNECTIONS:-15000}
      WS_MAX_CONNECTIONS_PER_USER: ${WS_MAX_CONNECTIONS_PER_USER:-5}
      WS_RATE_LIMIT_MAX_MESSAGES: ${WS_RATE_LIMIT_MAX_MESSAGES:-50}
    ports:
      - "${APP_PORT:-3000}:3000"
    volumes:
      - uploads_data:/app/uploads
      - ./logs:/app/logs
    networks:
      - lex-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: lex-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certificates:/etc/nginx/certificates:ro
      - uploads_data:/var/www/uploads:ro
    networks:
      - lex-network
    depends_on:
      - app
    profiles:
      - with-nginx

volumes:
  uploads_data:
    driver: local

networks:
  lex-network:
    driver: bridge 